const axios = require('axios');
const cheerio = require('cheerio');
const Parser = require('rss-parser');
const parser = new Parser();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
const processedLinks = new Set();

// –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ RSS-–ª–µ–Ω—Ç—ã (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, 5 –º–∏–Ω—É—Ç)
const CHECK_INTERVAL_MS = 60 * 1000;

// URL –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
const BACKEND_URL = 'http://localhost:8000/ai/new'; // http://your-backend.com/api/news –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL

async function fetchNewsFromRSS() {
    try {
        const feed = await parser.parseURL('https://rssexport.rbc.ru/rbcnews/news/30/full.rss');
        const items = feed.items.slice(0, 3); // –ü–µ—Ä–≤—ã–µ 3 –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –ª–µ–Ω—Ç—ã

        console.log(`=== üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Å –†–ë–ö (RSS) ===\n`);

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
        const newItems = items.filter(item => !processedLinks.has(item.link));

        if (newItems.length === 0) {
            console.log('‚ÑπÔ∏è –ù–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç.\n');
            return;
        }

        for (let i = 0; i < newItems.length; i++) {
            const { title, link, pubDate } = newItems[i];
            const text = await fetchFullArticle(link);

            console.log(`üì∞ ${i + 1}) ${title}`);
            console.log(`üìÖ –î–∞—Ç–∞: ${pubDate}`);
            console.log(`üîó –°—Å—ã–ª–∫–∞: ${link}`);
            console.log(`üìÑ –¢–µ–∫—Å—Ç:\n${text}`);
            console.log('---\n');

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –±—ç–∫–µ–Ω–¥
            await sendToBackend({ title, link, pubDate, text });

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ
            processedLinks.add(link);
        }
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ RSS:', err.message);
    }
}

async function fetchFullArticle(url) {
    try {
        const res = await axios.get(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0'
            }
        });
        const $ = cheerio.load(res.data);

        const paragraphs = $('div.article__text p').map((_, el) => $(el).text()).get();
        return paragraphs.join('\n').trim() || '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç.';
    } catch (err) {
        return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç—å–∏: ${err.message}`;
    }
}

async function sendToBackend(data) {
    try {
        const response = await axios.post(BACKEND_URL, {
            title: data.title,
            link: data.link,
            pubDate: data.pubDate,
            text: data.text
        }, {
            headers: {
                'Content-Type': 'application/json'
            }
        });
        console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –±—ç–∫–µ–Ω–¥: ${response.status} ${response.statusText}`);
    } catch (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ –±—ç–∫–µ–Ω–¥: ${err.message}`);
    }
}

// –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
function startPolling() {
    console.log(`üöÄ –ü–∞—Ä—Å–µ—Ä –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ ${CHECK_INTERVAL_MS / 1000 / 60} –º–∏–Ω—É—Ç.`);
    fetchNewsFromRSS(); // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
    setInterval(fetchNewsFromRSS, CHECK_INTERVAL_MS); // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
}

// –ó–∞–ø—É—Å–∫
startPolling();