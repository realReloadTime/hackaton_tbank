const axios = require('axios');
const Parser = require('rss-parser');

const parser = new Parser({
  headers: {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36',
    'Accept': 'application/rss+xml, application/xml;q=0.9, */*;q=0.8',
    'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7'
  }
});

const processedLinks = new Set();
const CHECK_INTERVAL_MS = 60 * 1000; // 10 –º–∏–Ω—É—Ç, –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å
const BACKEND_URL = 'http://your-backend.com/api/news'; // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL

async function fetchNewsFromRSS() {
  try {
    const response = await axios.get('https://www.vedomosti.ru/rss/news', {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36',
        'Accept': 'application/rss+xml, application/xml;q=0.9, */*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7'
      }
    });

    const feed = await parser.parseString(response.data);
    const items = feed.items.slice(0, 3);

    console.log(`=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Berlin' })} ===`);

    const newItems = items.filter(item => !processedLinks.has(item.link));

    if (newItems.length === 0) {
      console.log('–ù–µ—Ç –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.\n');
      return;
    }

    for (const item of newItems) {
      const { title, link, pubDate } = item;

      // –ë–µ—Ä—ë–º —Ç–µ–∫—Å—Ç –∏–∑ description –∏–ª–∏ content –∏–ª–∏ content:encoded
      const text = item.description || item.content || item['content:encoded'] || '–¢–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';

      console.log(`üì∞ ${title}`);
      console.log(`üìÖ –î–∞—Ç–∞: ${pubDate}`);
      console.log(`üîó –°—Å—ã–ª–∫–∞: ${link}`);
      console.log(`üìÑ –¢–µ–∫—Å—Ç:\n${text}`);
      console.log('---\n');

      await sendToBackend({ title, link, pubDate, text });

      processedLinks.add(link);
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ RSS:', err.message);
  }
}

async function sendToBackend(data) {
  try {
    const res = await axios.post(BACKEND_URL, data, {
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
      }
    });
    console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –±—ç–∫–µ–Ω–¥: ${res.status} ${res.statusText}`);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –±—ç–∫–µ–Ω–¥:', err.message);
  }
}

function startPolling() {
  console.log(`üöÄ –ó–∞–ø—É—â–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ ${CHECK_INTERVAL_MS / 1000 / 60} –º–∏–Ω—É—Ç.`);
  fetchNewsFromRSS();
  setInterval(fetchNewsFromRSS, CHECK_INTERVAL_MS);
}

startPolling();
